<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tepth.maintenancedispatch.dao.mapper.repair.FaultPhenomenonMapper">
  <resultMap id="BaseResultMap" type="com.tepth.maintenancedispatch.dao.model.repair.FaultPhenomenon">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="describes" jdbcType="VARCHAR" property="describes" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="operate_user_id" jdbcType="INTEGER" property="operateUserId" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="vehicle_series_id" jdbcType="INTEGER" property="vehicleSeriesId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, describes, `alias`, operate_user_id, operate_time, vehicle_series_id
  </sql>
  <select id="selectByExample" parameterType="com.tepth.maintenancedispatch.dao.model.repair.FaultPhenomenonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_fault_phenomenon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_fault_phenomenon
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_fault_phenomenon
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tepth.maintenancedispatch.dao.model.repair.FaultPhenomenonExample">
    delete from tb_fault_phenomenon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tepth.maintenancedispatch.dao.model.repair.FaultPhenomenon" useGeneratedKeys="true">
    insert into tb_fault_phenomenon (`name`, describes, `alias`, 
      operate_user_id, operate_time, vehicle_series_id
      )
    values (#{name,jdbcType=VARCHAR}, #{describes,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{operateUserId,jdbcType=INTEGER}, #{operateTime,jdbcType=TIMESTAMP}, #{vehicleSeriesId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tepth.maintenancedispatch.dao.model.repair.FaultPhenomenon" useGeneratedKeys="true">
    insert into tb_fault_phenomenon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="describes != null">
        describes,
      </if>
      <if test="alias != null">
        `alias`,
      </if>
      <if test="operateUserId != null">
        operate_user_id,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="vehicleSeriesId != null">
        vehicle_series_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="describes != null">
        #{describes,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="operateUserId != null">
        #{operateUserId,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vehicleSeriesId != null">
        #{vehicleSeriesId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tepth.maintenancedispatch.dao.model.repair.FaultPhenomenonExample" resultType="java.lang.Long">
    select count(*) from tb_fault_phenomenon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_fault_phenomenon
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.describes != null">
        describes = #{record.describes,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null">
        `alias` = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.operateUserId != null">
        operate_user_id = #{record.operateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.operateTime != null">
        operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vehicleSeriesId != null">
        vehicle_series_id = #{record.vehicleSeriesId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_fault_phenomenon
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      describes = #{record.describes,jdbcType=VARCHAR},
      `alias` = #{record.alias,jdbcType=VARCHAR},
      operate_user_id = #{record.operateUserId,jdbcType=INTEGER},
      operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      vehicle_series_id = #{record.vehicleSeriesId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tepth.maintenancedispatch.dao.model.repair.FaultPhenomenon">
    update tb_fault_phenomenon
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="describes != null">
        describes = #{describes,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        `alias` = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="operateUserId != null">
        operate_user_id = #{operateUserId,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vehicleSeriesId != null">
        vehicle_series_id = #{vehicleSeriesId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tepth.maintenancedispatch.dao.model.repair.FaultPhenomenon">
    update tb_fault_phenomenon
    set `name` = #{name,jdbcType=VARCHAR},
      describes = #{describes,jdbcType=VARCHAR},
      `alias` = #{alias,jdbcType=VARCHAR},
      operate_user_id = #{operateUserId,jdbcType=INTEGER},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      vehicle_series_id = #{vehicleSeriesId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryPhenomenonInfoById" resultType="com.tepth.maintenancedispatch.dto.inner.Phenomenon">
    select
    a.id,
    a.name,
    a.describes,
    a.alias,
    a.vehicle_series_id seriesId,
    b.name series
    from tb_fault_phenomenon a
    left join tb_vehicle_series b on a.vehicle_series_id = b.id
    where a.id = #{id}
  </select>
</mapper>