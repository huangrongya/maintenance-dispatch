<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tepth.maintenancedispatch.dao.mapper.vehicle.VehicleAlarmMapper">
  <resultMap id="BaseResultMap" type="com.tepth.maintenancedispatch.dao.model.vehicle.VehicleAlarm">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="frequency" jdbcType="TINYINT" property="frequency" />
    <result column="vehicle_id" jdbcType="INTEGER" property="vehicleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, add_time, `type`, `level`, content, frequency, vehicle_id
  </sql>
  <select id="selectByExample" parameterType="com.tepth.maintenancedispatch.dao.model.vehicle.VehicleAlarmExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_vehicle_alarm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_vehicle_alarm
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_vehicle_alarm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tepth.maintenancedispatch.dao.model.vehicle.VehicleAlarmExample">
    delete from tb_vehicle_alarm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tepth.maintenancedispatch.dao.model.vehicle.VehicleAlarm" useGeneratedKeys="true">
    insert into tb_vehicle_alarm (add_time, `type`, `level`, 
      content, frequency, vehicle_id
      )
    values (#{addTime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, #{level,jdbcType=TINYINT}, 
      #{content,jdbcType=VARCHAR}, #{frequency,jdbcType=TINYINT}, #{vehicleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tepth.maintenancedispatch.dao.model.vehicle.VehicleAlarm" useGeneratedKeys="true">
    insert into tb_vehicle_alarm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addTime != null">
        add_time,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="frequency != null">
        frequency,
      </if>
      <if test="vehicleId != null">
        vehicle_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        #{frequency,jdbcType=TINYINT},
      </if>
      <if test="vehicleId != null">
        #{vehicleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tepth.maintenancedispatch.dao.model.vehicle.VehicleAlarmExample" resultType="java.lang.Long">
    select count(*) from tb_vehicle_alarm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_vehicle_alarm
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.frequency != null">
        frequency = #{record.frequency,jdbcType=TINYINT},
      </if>
      <if test="record.vehicleId != null">
        vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_vehicle_alarm
    set id = #{record.id,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      `type` = #{record.type,jdbcType=TINYINT},
      `level` = #{record.level,jdbcType=TINYINT},
      content = #{record.content,jdbcType=VARCHAR},
      frequency = #{record.frequency,jdbcType=TINYINT},
      vehicle_id = #{record.vehicleId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tepth.maintenancedispatch.dao.model.vehicle.VehicleAlarm">
    update tb_vehicle_alarm
    <set>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="frequency != null">
        frequency = #{frequency,jdbcType=TINYINT},
      </if>
      <if test="vehicleId != null">
        vehicle_id = #{vehicleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tepth.maintenancedispatch.dao.model.vehicle.VehicleAlarm">
    update tb_vehicle_alarm
    set add_time = #{addTime,jdbcType=TIMESTAMP},
      `type` = #{type,jdbcType=TINYINT},
      `level` = #{level,jdbcType=TINYINT},
      content = #{content,jdbcType=VARCHAR},
      frequency = #{frequency,jdbcType=TINYINT},
      vehicle_id = #{vehicleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 公共的分页 -->
  <sql id="limit">
    <if test="queryPage != null">
      limit #{queryPage.limitStart} , #{queryPage.limitEnd}
    </if>
  </sql>
  <!--排序的分页-->
  <sql id="orderLimit">
    <if test="queryPage != null">
      <if test="queryPage.order != null and queryPage.sort != null">
        order by ${queryPage.sort} ${queryPage.order}
      </if>
      limit #{queryPage.limitStart} , #{queryPage.limitEnd}
    </if>
  </sql>

</mapper>